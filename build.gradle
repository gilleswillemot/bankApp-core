/**
 * For JVM, add implementation 'com.github.gilleswillemot:bankApp-core-jvm:1.0`:
 * dependencies {*     implementation 'com.github.gilleswillemot:bankApp-core-jvm:1.0'
 * }
 * For JS: implementation 'com.github.gilleswillemot:bankApp-core-js:1.0'
 * For MacOS Native: implementation 'com.github.gilleswillemot:bankApp-core-macos:1.0'
 *
 * Source to Publishing to Bintray guide: https://natanfudge.github.io/fudgedocs/publish-kotlin-mpp-lib.html
 */
buildscript {
    ext.kotlin_version = '1.3.41'
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/gillesw/maven"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintray_plugin_version"
    }
}

plugins {
    id('org.jetbrains.kotlin.multiplatform').version('1.3.41')
    id "base"
    id "maven-publish" // needed for publishing method in 'configure' here beneath.

    // needed for afterReleaseBuild, source: https://stackoverflow.com/questions/33867323/gradle-release-plugin-maven-publishing-plugin
    id 'net.researchgate.release' version '2.6.0'
}


group = group
version = version

allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.jfrog.bintray' // needed for the bintray method in the bintray.gradle file.

afterEvaluate {
    project.publishing.publications.all {
        // rename artifacts
        groupId = group
        if (it.name.contains('metadata')) {
            artifactId = projectBintrayArtifactName
        } else {
            artifactId = projectBintrayArtifactName+"-$name"
        }
    }
}
apply from: rootProject.file('gradle/bintray.gradle')

// This specifies the publications to upload to bintray before doing the bintrayUpload gradle task.
// In the mpp configuration of one module after 1.3,
// it is not uploaded unless you explicitly specify artifacts in publications like this.
// It is not necessary to have the findAll part,
// [project name]-kotlinMultiplatformbut a directory containing only pom files will be uploaded, so it is better to exclude it.
bintrayUpload.doFirst {
    publications = publishing.publications.collect {
        it.name
    }.findAll {
        it != "kotlinMultiplatform"
    }
}

//The task of bintrayUpload depends on publishToMavenLocal set in the previous section.
// This will create maven artifacts when running bintrayUplaod's task.
bintrayUpload.dependsOn publishToMavenLocal