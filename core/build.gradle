/**
 * Build via terminal: `gradlew build` or `gradlew :core:build`
 *
 * Find the js, jvm, ... libs in core/build/libs folder.
 *
 * Find the JavaScript files in: core/build/classes/kotlin/js/main
 */

apply plugin: 'com.android.library'
// for publishing purposes, per platform the artifact names etc will autom. be configured (to not have duplicate .jar files).
// Otherwise error when publishing via jitpack: > A POM cannot have multiple artifacts
// with the same type and classifier. Already have MavenArtifact core:jar:jar:null, trying to add
// MavenArtifact core:jar:jar:null.
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
}

group = 'be.abstraction.core'
version = '0.0.1'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    // Added sourceSets as I renamed the java folder to kotlin.
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

apply plugin: 'kotlin-multiplatform'

/** kotlin multiplatform has a predefined template structure with a commonMain, thus
 * references to your source are needed if deviating from this convention.
 * This project was created with Android Studio: /src/main/java, while when using IDEA a multiplatform project would
 * look like: /src/commonMain/kotlin
 */
kotlin {
    project.logger.lifecycle('building jvm and js with kotlin-multiplatform')

    jvm()
    js()
    // https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#android-support
    android {
        publishLibraryVariants("release", "debug")
    }
    linuxX64('linux')
    [iosArm64(), iosX64(), macosX64('macos')].each {
        it.binaries.framework {
            baseName = "BankProviderFramework"

            // Exporting dependencies in frameworks
//                export 'com.github.gilleswillemot.bankApp-core:core-jvm:1.2.9' // probably core-macosx64 needed
        }
    }

    sourceSets {
        commonMain {
            // We add the source set origin, because we don't worked with a commonMain folder (we used main folder) and
            // otherwise the files in src/main/kotlin would not be compiled.
            kotlin.srcDir('src/main/kotlin')
            resources.srcDir('src/main/res')
            dependencies {
                // if this dependency is removed => 'Kotlin not configured' in IBankProvider.
                implementation kotlin('stdlib-common')
            }
        }
        //only kotlin code can be build with multiplatform, not java.
//        commonTest {
//            kotlin.srcDir('src/test/java')
//            dependencies {
//                implementation kotlin('test-common')
//                implementation kotlin('test-annotations-common')
//                implementation kotlin('test-junit')
//            }
//        }
        nativeMain {
            dependsOn(commonMain)
        }
//        nativeTest {
//            dependsOn(commonTest)
//        }
        [linuxMain, iosArm64Main, iosX64Main, macosMain].each {
            it.dependsOn(nativeMain)
        }
//        commonAndroidTest {
//            kotlin.srcDir('src/androidTest/java')
//        }
        // We need this jvm dependency if List is not recognised in the IBankProvider interface.
        jvm().compilations.main.defaultSourceSet {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}