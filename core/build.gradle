/**
 * Build via terminal: `gradlew build` or `gradlew :core:build`
 * To compile the code and produce libraries: `gradlew build publishToMavenLocal`
 * and to publish: `gradlew bintrayUpload`.
 */
apply plugin: 'maven-publish'
apply plugin: 'kotlin-multiplatform'

kotlin {
    jvm()
    js()
    configure([iosArm64(), iosX64(), macosX64('macos')]) {
        def artifactPlatform = name // target platform name
        println artifactPlatform

        binaries.framework {
            baseName = 'bankApp-core' + artifactPlatform + "Framework"
        }
    }

    sourceSets {
        commonMain {
            // We add the source set origin, because we don't worked with a commonMain folder (we used main folder) and
            // otherwise the files in src/main/kotlin would not be compiled.
            kotlin.srcDir('src/main/kotlin')
            dependencies {
                // if this dependency is removed => 'Kotlin not configured' in IBankProvider class.
                implementation kotlin('stdlib-common')
            }
        }
        jvm().compilations.main.defaultSourceSet {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
    }
}

apply plugin: 'com.jfrog.bintray' // needed for the bintray method in the bintray.gradle file.

afterEvaluate {
    project.publishing.publications.all {
        // rename artifacts
        groupId = group
        if (it.name.contains('metadata')) {
            artifactId = projectBintrayArtifactName
        } else {
            artifactId = projectBintrayArtifactName + "-$name"
        }
    }
}

// Bintray repository setup / configuration.
apply from: rootProject.file('gradle/bintray.gradle')

// This specifies the publications to upload to bintray before doing the bintrayUpload gradle task.
// In the mpp configuration of one module after 1.3,
// it is not uploaded unless you explicitly specify artifacts in publications like this.
// It is not necessary to have the findAll part,
// [project name]-kotlinMultiplatformbut a directory containing only pom files will be uploaded, so it is better to exclude it.
bintrayUpload.doFirst {
    publications = publishing.publications.collect {
        it.name
    }.findAll {
        it != "kotlinMultiplatform"
    }
}

//The task of bintrayUpload depends on publishToMavenLocal set in the previous section.
// This will create maven artifacts when running bintrayUpload's task.
bintrayUpload.dependsOn publishToMavenLocal