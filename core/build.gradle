/**
 * Build via terminal: gradlew :core:build
 */
apply plugin: 'com.android.library'
apply plugin: 'kotlin-multiplatform'

repositories {
    mavenCentral()
}

group = 'com.github.jitpack'
version = '1.0'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    // Added sourceSets as I renamed the java folder to kotlin.
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

// kotlin multiplatform has a predefined template structure with a commonMain, thus
// references to your source are needed if deviating from this convention.
// This project was created with Android Studio: /src/main/java, while when using IDEA a multiplatform project would
// look like: /src/commonMain/kotlin
kotlin {
//    jvm() // commented because error when compiling in jitpack: > A POM cannot have multiple artifacts
//    with the same type and classifier. Already have MavenArtifact core:jar:jar:null, trying to add
//    MavenArtifact core:jar:jar:null.
//    js("js") // Used name "js" to not have the jitpack error (cannot have multiple artifacts with same type and classifier),
//    This is probably because we need to use js("othername") as using js() will make core.jar (which already exists)

    // https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#android-support
    android {
//        publishLibraryVariants("release", "debug")
    }

    sourceSets {
        commonMain {
            // We add the source set origin, because we don't worked with a commonMain folder (we used main folder) and
            // otherwise the files in src/main/kotlin would not be compiled.
            kotlin.srcDir('src/main/kotlin')
            resources.srcDir('src/main/res')
            dependencies {
                // if this dependency is removed => 'Kotlin not configured' in IBankProvider.
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            kotlin.srcDir('src/test/java')
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation kotlin('test-junit')
            }
        }
//        commonAndroidTest {
//            kotlin.srcDir('src/androidTest/java')
//        }
        // We might need this jvm dependency if List is not recognised in the IBankProvider interface.
//        jvm().compilations.main.defaultSourceSet {
//            dependencies {
//                implementation kotlin('stdlib-jdk8')
//            }
//        }
        jvmMain {
            dependsOn commonMain
        }
        androidMain {
            dependsOn commonMain
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
